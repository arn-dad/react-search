{"version":3,"sources":["context/app-context.js","components/Search/Search.jsx","components/Posts/Posts.jsx","App.js","index.js"],"names":["AppContext","React","createContext","Search","useState","loading","state","setState","context","useContext","className","Input","onChange","event","str","target","value","filter","JSON","stringify","where","title","like","fetch","then","response","json","data","setPosts","catch","error","console","log","placeholder","Posts","Card","Group","results","map","item","key","id","fluid","color","header","description","meta","author","App","props","posts","this","Provider","Component","ReactDOM","render","document","getElementById"],"mappings":"oSAIeA,EAFIC,IAAMC,gB,ykBCEzB,IA8BeC,EA1BA,WAAO,IAAD,EACOC,mBAAS,CAAEC,SAAS,IAD3B,mBACZC,EADY,KACLC,EADK,KAEbC,EAAUC,qBAAWT,GAiB3B,OACE,yBAAKU,UAAU,cACZ,kBAACC,EAAA,EAAD,CAAOC,SAjBM,SAACC,GACjBN,EAAS,EAAD,GAAMD,EAAN,CAAaD,SAAS,KAC9B,IAAMS,EAAMD,EAAME,OAAOC,MACnBC,EAASC,KAAKC,UAAU,CAACC,MAAM,CAAEC,MAAO,CAAEC,KAAMR,MACtDS,MAAM,GAAD,OAZG,gDAYH,mBAAkBN,IAAUO,MAC/B,SAAAC,GAAQ,OAAIA,EAASC,OAAOF,MAAK,SAACG,GAChCpB,EAAS,EAAD,GAAMD,EAAN,CAAaD,SAAS,KAC9BG,EAAQoB,SAASD,SAEnBE,OAAM,SAACC,GACPC,QAAQC,IAAI,0BAA2BF,GACvCvB,EAAS,EAAD,GAAMD,EAAN,CAAaD,SAAS,SAMDA,QAASC,EAAMD,QAAS4B,YAAY,gB,SCTxDC,EAhBD,WACZ,IAAM1B,EAAUC,qBAAWT,GAE3B,OACE,yBAAKU,UAAU,aACd,kBAACyB,EAAA,EAAKC,MAAN,KACG5B,EAAQ6B,QAAQC,KAAI,SAACC,GACpB,OACC,kBAACJ,EAAA,EAAD,CAAMK,IAAKD,EAAKE,GAAIC,OAAK,EAACC,MAAM,SAASC,OAAQL,EAAKlB,MAAQwB,YAAaN,EAAKM,YAAcC,KAAMP,EAAKQ,eCwBpGC,G,mBA7Bb,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KAORrB,SAAW,SAACD,GACV,EAAKpB,SAAS,CAAE2C,MAAOvB,KANvB,EAAKrB,MAAQ,CACX4C,MAAO,IAJO,E,sEAYR,IACAA,EAAUC,KAAK7C,MAAf4C,MACR,OACE,kBAAC,EAAWE,SAAZ,CAAqBpC,MAAO,CAAEqB,QAASa,EAAOtB,SAAUuB,KAAKvB,WAC3D,yBAAKlB,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,SACb,kBAAC,EAAD,a,GAtBMT,IAAMoD,Y,OCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f741039b.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport default AppContext;","import React, { useState, useContext } from 'react';\nimport { Input } from 'semantic-ui-react'\nimport AppContext from '../../context/app-context';\n\nconst url = 'https://it-blog-posts.herokuapp.com/api/posts'\n\n//  {\"where\":{\"title\": {\"like\":\"web\"}}}\n\nconst Search = () => {\n  const [state, setState] = useState({ loading: false });\n  const context = useContext(AppContext);\n\n  const fetchData = (event) => {\n    setState({ ...state, loading: true });\n    const str = event.target.value;\n    const filter = JSON.stringify({where:{ title: { like: str }}})\n    fetch(`${url}?filter=${filter}`).then(\n      response => response.json().then((data) => {\n        setState({ ...state, loading: false });\n        context.setPosts(data)\n      })\n    ).catch((error) => {\n      console.log(\"#AR: fetchData -> error\", error);\n      setState({ ...state, loading: false });\n    })\n  }\n\n  return (\n    <div className=\"search-box\">\n       <Input onChange={fetchData} loading={state.loading} placeholder='Search...' />\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useContext } from 'react';\nimport { Card } from 'semantic-ui-react'\nimport AppContext from '../../context/app-context';\n\nconst Posts = () => {\n  const context = useContext(AppContext);\n\n  return (\n    <div className=\"posts-box\">\n     <Card.Group>\n       {context.results.map((item) => {\n         return (\n          <Card key={item.id} fluid color='yellow' header={item.title}  description={item.description}  meta={item.author}/>\n         )\n       })}\n     </Card.Group>  \n    </div>\n  );\n};\n\nexport default Posts;","import React from 'react';\nimport Search from './components/Search/Search';\nimport Posts from './components/Posts/Posts'\nimport AppContext from './context/app-context';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      posts: []\n    }\n  }\n\n  setPosts = (data) => {\n    this.setState({ posts: data })\n  }\n\n  render() {\n    const { posts } = this.state;\n    return (\n      <AppContext.Provider value={{ results: posts, setPosts: this.setPosts }}>\n        <div className=\"App\">\n          <div className=\"search\">\n            <Search />\n          </div>\n          <div className=\"posts\">\n            <Posts />\n          </div>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'semantic-ui-css/semantic.min.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}